name: CI

on:
  push:
    branches:
      - main
      - "v[0-9]+.[0-9]+.x"
    tags:
      - "v*"

  pull_request:
    branches:
      - "**"

concurrency:
  # Allow only one workflow per any non-`main` branch.
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'main' && github.sha || 'anysha' }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  job_spec:
    name: Decide which jobs to run
    if: github.repository_owner == 'zed-industries'
    outputs:
      run_tests: ${{ steps.filter.outputs.run_tests }}
      run_license: ${{ steps.filter.outputs.run_license }}
    runs-on:
      - ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # 350 is arbitrary; ~10days of history on main (5secs); full history is ~25secs
          fetch-depth: ${{ github.ref == 'refs/heads/main' && 2 || 350 }}
      - name: Fetch git history and generate output filters
        id: filter
        run: |
          if [ -z "$GITHUB_BASE_REF" ]; then
            echo "Not in a PR context (i.e., push to main/stable/preview)"
            COMPARE_REV=$(git rev-parse HEAD~1)
          else
            echo "In a PR context comparing to pull_request.base.ref"
            git fetch origin "$GITHUB_BASE_REF" --depth=350
            COMPARE_REV=$(git merge-base "origin/${GITHUB_BASE_REF}" HEAD)
          fi
          # Specify anything which should skip full CI in this regex:
          # - docs/
          # - .github/ISSUE_TEMPLATE/
          # - .github/workflows/  (except .github/workflows/ci.yml)
          SKIP_REGEX='^(docs/|\.github/(ISSUE_TEMPLATE|workflows/(?!ci)))'
          if [[ $(git diff --name-only $COMPARE_REV ${{ github.sha }} | grep -vP "$SKIP_REGEX") ]]; then
            echo "run_tests=true" >> $GITHUB_OUTPUT
          else
            echo "run_tests=false" >> $GITHUB_OUTPUT
          fi
          if [[ $(git diff --name-only $COMPARE_REV ${{ github.sha }} | grep '^Cargo.lock') ]]; then
            echo "run_license=true" >> $GITHUB_OUTPUT
          else
            echo "run_license=false" >> $GITHUB_OUTPUT
          fi



  nix-build:
    name: Build with Nix
    uses: ./.github/workflows/nix.yml
    if: github.repository_owner == 'zed-industries' && contains(github.event.pull_request.labels.*.name, 'run-nix')
    with:
      flake-output: debug
      # excludes the final package to only cache dependencies
      cachix-filter: "-zed-editor-[0-9.]*-nightly"
